---
import { Icon } from 'astro-icon/components'
const { class: className } = Astro.props
---

<!-- class="border-[1px] border-foreground rounded-full flex justify-center items-center" -->
<div
  class:list={[
    className,
    'border-[1px] border-foreground rounded-full flex justify-center items-center text-foreground [&>*:hover]:brightness-75 md:opacity-80',
  ]}
>
  <button
    data-theme="theme-auto"
    aria-label="Auto Theme"
    class="theme-button theme-auto"
  >
    <Icon
      name="mdi:brightness-auto"
      class:list="duration-0 text-3xl md:text-xl"
    />
  </button>
  <!-- class="p-2 text-primary bg-primary bg-opacity-10 rounded-full" -->
  <button
    data-theme="theme-light"
    aria-label="Light Theme"
    class="theme-button theme-light"
  >
    <Icon
      name="mdi:white-balance-sunny"
      class:list="duration-0 text-3xl md:text-xl"
    />
  </button>
  <button
    data-theme="theme-dark"
    aria-label="Dark Theme"
    class="theme-button theme-dark"
  >
    <Icon
      name="mdi:moon-and-stars"
      class:list="duration-0 text-3xl md:text-xl"
    />
  </button>
</div>

<style>
  button.theme-button {
    @apply p-2 md:p-1 rounded-full duration-0;
  }
  button.active {
    @apply text-primary bg-primary bg-opacity-10;
  }
</style>

<script is:inline>
  function reComputeTheme() {
    console.log(window.matchMedia('(prefers-color-scheme: dark)').matches)
    console.log(localStorage.theme)
    if (
      localStorage.theme === 'dark' ||
      (!('theme' in localStorage) &&
        window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      document.documentElement.classList.add('dark')
    } else {
      document.documentElement.classList.remove('dark')
    }

    let theme = localStorage.theme || 'auto'
    // document.getElementById(`theme-${theme}`)?.classList.add('active')
    document
      .querySelector(`[data-theme="theme-${theme}"]`)
      ?.classList.add('active')
  }

  // Switch theme with buttons & add active class to current one
  // const themeButtons = document.querySelectorAll('[data-theme="theme-"]')
  const themeButtons = document.querySelectorAll('.theme-button')
  themeButtons.forEach((button) => {
    button.addEventListener('click', () => {
      console.log('first')
      themeButtons.forEach((btn) => btn.classList.remove('active'))
      button.classList.add('active')
      // if (button.id === 'theme-auto') {
      console.log(button.dataset.theme)
      if (button.dataset.theme === 'theme-auto') {
        localStorage.removeItem('theme')
        reComputeTheme()
      } else {
        // localStorage.theme = button.id.replace('theme-', '')
        console.log('THEIS', button.dataset.theme.replace('theme-', ''))
        localStorage.theme = button.dataset.theme.replace('theme-', '')
        document.documentElement.classList.toggle(
          'dark',
          button.dataset.theme === 'theme-dark'
        )
      }
    })
  })

  // Set active class on OS theme change
  window
    .matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', (e) => {
      // let theme = localStorage.theme || (e.matches ? 'dark' : 'light')
      // document.getElementById(`theme-${theme}`)?.classList.add('active')
      // document.documentElement.classList.toggle('dark', theme === 'dark')
      reComputeTheme()
    })

  reComputeTheme()
</script>
